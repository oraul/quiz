---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/alternatives":
    get:
      summary: Retrieves alternative list
      tags:
      - Alternatives
      responses:
        '200':
          description: alternative found
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Alternative"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UnauthorizedError"
    post:
      summary: Creates an alternative
      tags:
      - Alternatives
      parameters: []
      responses:
        '201':
          description: alternative created
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UnauthorizedError"
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AlternativeError"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Alternative"
  "/alternatives/{id}":
    get:
      summary: Retrieves an alternative
      tags:
      - Alternatives
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: alternative found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Alternative"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UnauthorizedError"
        '404':
          description: alternative not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RecordNotFoundError"
    patch:
      summary: Updates an alternative
      tags:
      - Alternatives
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: alternative updated
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UnauthorizedError"
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AlternativeError"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Alternative"
    delete:
      summary: Deletes a alternative
      tags:
      - Alternatives
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: alternative deleted
        '401':
          description: unauthorized
        '404':
          description: alternative not found
  "/disciplines":
    get:
      summary: Retrieves discipline list
      tags:
      - Disciplines
      responses:
        '200':
          description: discipline found
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Discipline"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UnauthorizedError"
    post:
      summary: Creates a discipline
      tags:
      - Disciplines
      parameters: []
      responses:
        '201':
          description: discipline created
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UnauthorizedError"
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DisciplineError"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Discipline"
  "/disciplines/{id}":
    get:
      summary: Retrieves a discipline
      tags:
      - Disciplines
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: discipline found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Discipline"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UnauthorizedError"
        '404':
          description: discipline not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RecordNotFoundError"
    patch:
      summary: Updates a discipline
      tags:
      - Disciplines
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: discipline updated
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UnauthorizedError"
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DisciplineError"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Discipline"
    delete:
      summary: Deletes a discipline
      tags:
      - Disciplines
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: discipline deleted
        '401':
          description: unauthorized
        '404':
          description: discipline not found
  "/questions":
    get:
      summary: Retrieves question list
      tags:
      - Questions
      responses:
        '200':
          description: question found
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Question"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UnauthorizedError"
    post:
      summary: Creates a question
      tags:
      - Questions
      parameters: []
      responses:
        '201':
          description: question created
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UnauthorizedError"
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/QuestionError"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Question"
  "/questions/{id}":
    get:
      summary: Retrieves a question
      tags:
      - Questions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: question found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Question"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UnauthorizedError"
        '404':
          description: question not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RecordNotFoundError"
    patch:
      summary: Updates a question
      tags:
      - Questions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: question updated
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UnauthorizedError"
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/QuestionError"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Question"
    delete:
      summary: Deletes a question
      tags:
      - Questions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: question deleted
        '401':
          description: unauthorized
        '404':
          description: question not found
  "/topics":
    get:
      summary: Retrieves topic list
      tags:
      - Topics
      responses:
        '200':
          description: topic found
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Topic"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UnauthorizedError"
    post:
      summary: Creates a topic
      tags:
      - Topics
      parameters: []
      responses:
        '201':
          description: topic created
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UnauthorizedError"
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TopicError"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Topic"
  "/topics/{id}":
    get:
      summary: Retrieves a topic
      tags:
      - Topics
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: topic found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Topic"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UnauthorizedError"
        '404':
          description: topic not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RecordNotFoundError"
    patch:
      summary: Updates a topic
      tags:
      - Topics
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: topic updated
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UnauthorizedError"
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TopicError"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Topic"
    delete:
      summary: Deletes a topic
      tags:
      - Topics
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: topic deleted
        '401':
          description: unauthorized
        '404':
          description: topic not found
security:
- bearerAuth: []
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UnauthorizedError:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    RecordNotFoundError:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    Alternative:
      type: object
      properties:
        id:
          type: string
          format: uuid
        description:
          type: string
        correct:
          type: boolean
        question_id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        url:
          type: string
          format: url
      required:
      - id
      - description
      - question_id
      - correct
      - created_at
      - updated_at
      - url
    AlternativeError:
      type: object
      properties:
        description:
          type: array
          items:
            type: string
        correct:
          type: array
          items:
            type: string
        question:
          type: array
          items:
            type: string
    Discipline:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        url:
          type: string
          format: url
      required:
      - id
      - name
      - created_at
      - updated_at
      - url
    DisciplineError:
      type: object
      properties:
        name:
          type: array
          items:
            type: string
    Question:
      type: object
      properties:
        id:
          type: string
          format: uuid
        enunciation:
          type: string
        topic_id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        url:
          type: string
          format: url
      required:
      - id
      - enunciation
      - created_at
      - updated_at
      - url
    QuestionError:
      type: object
      properties:
        enunciation:
          type: array
          items:
            type: string
        topic:
          type: array
          items:
            type: string
    Topic:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        discipline_id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        url:
          type: string
          format: url
      required:
      - id
      - name
      - created_at
      - updated_at
      - url
    TopicError:
      type: object
      properties:
        name:
          type: array
          items:
            type: string
        discipline:
          type: array
          items:
            type: string
